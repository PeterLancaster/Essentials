trigger:
  - main
  - develop
  - refs/tags/*

pr:
  - main
  - develop

variables:
  BASE_VERSION: 1.6.0
  PREVIEW_LABEL: 'ci'
  BUILD_NUMBER: $[counter(format('{0}_{1}_{2}', variables['BASE_VERSION'], variables['PREVIEW_LABEL'], variables['Build.SourceBranch']), 1)]
  NUGET_VERSION: $[format('{0}-{1}.{2}', variables['BASE_VERSION'], variables['PREVIEW_LABEL'], variables['BUILD_NUMBER'])]
  GIT_SHA: $(Build.SourceVersion)
  GIT_BRANCH_NAME: $(Build.SourceBranchName)

  # test devices
  IOS_SIM_NAME: 'iPhone 11'
  IOS_SIM_RUNTIME: 'com.apple.CoreSimulator.SimRuntime.iOS-13-6'
  ANDROID_EMU_TARGET: 'system-images;android-29;google_apis_playstore;x86'
  ANDROID_EMU_DEVICE: 'Nexus 5X'

resources:
  repositories:
    - repository: internal-templates
      type: github
      name: xamarin/yaml-templates
      endpoint: xamarin
    - repository: components
      type: github
      name: xamarin/XamarinComponents
      endpoint: xamarin

stages:
  - stage: prepare
    displayName: Prepare all the build variables and any other settings
    jobs:
      - job: prepare
        displayName: Prepare Build
        pool:
          vmImage: ubuntu-latest
        steps:
          - checkout: none
          - pwsh: |
              $pr = "pr." + $env:SYSTEM_PULLREQUEST_PULLREQUESTNUMBER
              $nuget = $env:BASE_VERSION + "-" + $pr + "." + $env:BUILD_NUMBER
              Write-Host "Preview label: $pr"
              Write-Host "NuGet version: $nuget"
              Write-Host "##vso[task.setvariable variable=PREVIEW_LABEL]$pr"
              Write-Host "##vso[task.setvariable variable=NUGET_VERSION]$nuget"
            displayName: Use a special preview label for PRs
            condition: eq(variables['Build.Reason'], 'PullRequest')
          - pwsh: |
              $tagVersion = $env:BUILD_SOURCEBRANCHNAME
              Write-Host "Tag version: $tagVersion"
              Write-Host "##vso[task.setvariable variable=NUGET_VERSION]$tagVersion"
            displayName: Override version for tags
            condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
          - pwsh: |
              Write-Host "##vso[build.updatebuildnumber]$env:NUGET_VERSION"
            displayName: Update the build number with a more readable one

  - stage: build
    displayName: Build the main part - library, NuGet, tests and samples
    dependsOn: [ 'prepare' ]
    jobs:
      - template: .ci/build.yml@components
        parameters:
          areaPath: 'DevDiv\Xamarin SDK\Build and Tools'
      - ${{ if eq(variables['System.TeamProject'], 'devdiv') }}:
        - template: sign-artifacts/jobs/v1.yml@internal-templates
          parameters:
            additionalConditions: eq(variables['Build.SourceBranch'], 'refs/heads/main')

  - stage: devicetests
    displayName: Run the tests on actual devices
    dependsOn: [ 'prepare' ]
    jobs:
      - job: devicetests_uwp
        displayName: Run UWP Device Tests
        # skip for now
        condition: and(succeeded(), not(succeeded()))
        pool:
          vmImage: windows-2019
        steps:
          - script: 'certutil -importpfx $(Build.SourcesDirectory)\DeviceTests\DeviceTests.UWP\DeviceTests.UWP_TemporaryKey.pfx'
            displayName: 'Run certutil'
          - powershell: |
              cd DeviceTests
              .\build.ps1 --target=test-uwp-emu --settings_skipverification=true --verbosity=diagnostic
            displayName: 'Run Device Tests - UWP'
          - task: PublishTestResults@2
            displayName: 'Publish Test Results'
            inputs:
              testResultsFormat: XUnit
              testResultsFiles: '**/xunit-*.xml'
              testRunTitle: 'Device Tests - UWP'

      - template: .ci/build.yml@components
        parameters:
          name: devicetests_ios
          runChecks: false
          displayName: Run iOS Device Tests
          windowsImage: ''
          areaPath: 'DevDiv\Xamarin SDK\Build and Tools'
          verbosity: diagnostic
          cakeFile: DeviceTests/build.cake
          cakeTarget: test-ios-emu

      - template: .ci/build.yml@components
        parameters:
          name: devicetests_android
          runChecks: false
          displayName: Run Android Device Tests
          macosImage: ''
          areaPath: 'DevDiv\Xamarin SDK\Build and Tools'
          verbosity: diagnostic
          cakeFile: DeviceTests/build.cake
          cakeTarget: test-android-emu
          preBuildSteps:
            - pwsh: cmd /c "echo `"y`" | `"$env:ANDROID_HOME\tools\bin\sdkmanager.bat`" `"$env:ANDROID_EMU_TARGET`""
              displayName: Install the Android emulators
